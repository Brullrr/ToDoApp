{"version":3,"sources":["Images/Cart.PNG","Images/HomeIcon.png","ShoppingCartProject/Components/ShoppingPage/ShoppingPage.module.css","ShoppingCartProject/Components/HomePage/HomePage.module.css","ShoppingCartProject/Components/Header/Header.js","ShoppingCartProject/Store/ActionTypes/ActionTypes.js","ShoppingCartProject/Reusables/Products/Products.js","ShoppingCartProject/Reusables/Product/Product.js","ShoppingCartProject/Components/ShoppingPage/ShoppingPage.js","ShoppingCartProject/Components/CartModal/CartModal.js","ShoppingCartProject/Components/HomePage/HomePage.js","ShoppingCartProject/ShoppingCartProject.js","App.js","serviceWorker.js","ShoppingCartProject/Store/Reducers/isCartModalOpenReducer.js","index.js","ShoppingCartProject/Components/CartModal/CartModal.module.css","ShoppingCartProject/Reusables/Product/Product.module.css","ShoppingCartProject/Components/Header/Header.module.css"],"names":["module","exports","connect","state","isCartModalOpen","scrtmdlpnrdcr","dispatch","toggleCartModal","type","props","className","classes","HeaderContainer","to","HomeButton","HomeImage","src","homeIconIMG","alt","BrowseButton","onClick","CartButton","CartNumber","CartImage","cartIMG","ProductList","productName","productPrice","productSource","pic","key","picT","Product","useState","quantity","setQuantity","enterQuantity","console","log","name","ProductContainer","ProductImageHolder","ProductImage","source","ProductName","ProductQandA","ProductPrice","price","QuantityInput","placeholder","min","max","value","onChange","element","newQuantity","target","style","border","AddButton","alert","ShoppingPage","ShoppingContainer","map","keys","Backdrop","CartModalContainer","CartModalHolder","ItemName","ItemAmount","ItemCostTotal","TotalWords","TotalCost","CheckoutButton","HomePage","HomePageContainer","shoppingPage","cartModal","backdropClicked","homePage","path","exact","render","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","reducer","action","rootReducer","combineReducers","isCartOpenReducer","store","createStore","ReactDOM","StrictMode","basename","process","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3247320e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cart.af5206e7.PNG\";","module.exports = __webpack_public_path__ + \"static/media/HomeIcon.ebdea7e0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShoppingContainer\":\"ShoppingPage_ShoppingContainer__2ZIv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePageContainer\":\"HomePage_HomePageContainer__ZqV7N\"};","import React, { Fragment } from 'react';\r\nimport classes from './Header.module.css';\r\nimport cartIMG from '../../../Images/Cart.PNG';\r\nimport homeIconIMG from '../../../Images/HomeIcon.png';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../Store/ActionTypes/ActionTypes';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    let cartItemsNumber = 0\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.HeaderContainer}>\r\n            \r\n                <Link to=\"/\">\r\n                    <button className={classes.HomeButton}><img className={classes.HomeImage} src={homeIconIMG} alt=\"HomeImage\"></img></button>\r\n                </Link>\r\n                \r\n                <div />\r\n                \r\n                <Link to=\"/Browse\">\r\n                    <button className={classes.BrowseButton}>&#8492;&#120007;&#8500;&#120012;&#120008;&#8495;</button>\r\n                </Link>\r\n                    \r\n                <div />\r\n                \r\n                <button onClick={props.toggleCartModal} className={classes.CartButton}>\r\n                    <p className={classes.CartNumber}>{cartItemsNumber}</p>\r\n                    <img className={classes.CartImage} src={cartIMG} alt=\"CartImage\"></img>\r\n                </button>\r\n\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isCartModalOpen: state.scrtmdlpnrdcr.isCartModalOpen\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    toggleCartModal: () => dispatch({type: actionTypes.TOGGLE_CART_MODAL})\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","export const TOGGLE_CART_MODAL = 'TOGGLE_CART_MODAL';","import pic from '../../../Images/Cart.PNG';\r\nimport picT from '../../../Images/HomeIcon.png';\r\n\r\nconst ProductList = [\r\n    {\r\n        productName: \"Product One\",\r\n        productPrice: \"4.50\",\r\n        productSource: pic,\r\n        key: \"1\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: picT,\r\n        key: \"2\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"3\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"4\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"5\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"6\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"7\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"8\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"9\"\r\n    },\r\n    {\r\n        productName: \"replace\",\r\n        productPrice: \"replace\",\r\n        productSource: \"replace\",\r\n        key: \"10\"\r\n    },\r\n]\r\n\r\nexport default ProductList","import React, { useState } from 'react';\r\nimport classes from './Product.module.css'\r\n\r\nconst Product = (props) => {\r\n\r\n    const [quantity, setQuantity] = useState(\"QNTY\")\r\n\r\n\r\n\r\n    let enterQuantity = null \r\n    if(quantity === 0) {\r\n        enterQuantity = \"1px solid red\"\r\n    }\r\n    const quantityHandler = (element) => {\r\n        let newQuantity = element.target.value >= 11 ? 10 : element.target.value\r\n\r\n        if(newQuantity <= 0) {\r\n            newQuantity = 0\r\n        }\r\n            setQuantity(newQuantity)\r\n            \r\n    }\r\n    console.log(\"Current quantity of \"+ props.name + \" is \" + quantity)\r\n\r\n\r\n    const verify = () => {\r\n        if(quantity <=0 || quantity >=11) {\r\n            alert(\"ERROR PLEASE REFRESH PAGE\")\r\n        } else {\r\n            alert(\"SENT\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ProductContainer}>\r\n            <div className={classes.ProductImageHolder}>\r\n            <img className={classes.ProductImage}   src={props.source} />\r\n            </div>\r\n            <p className={classes.ProductName} >{props.name}</p>    \r\n            <div />        \r\n            <div className={classes.ProductQandA}>\r\n                <p className={classes.ProductPrice} >${props.price}</p>\r\n                <input className={classes.QuantityInput} placeholder=\"Qnty\" type='number' min=\"0\" max=\"10\" value={quantity} onChange={quantityHandler} style={{\r\n                    border: enterQuantity\r\n                }} ></input>\r\n\r\n                <button className={classes.AddButton} onClick={verify} > Add to cart </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","import React, { Fragment } from 'react';\r\nimport classes from './ShoppingPage.module.css';\r\nimport Header from '../Header/Header';\r\nimport ProductList from '../../Reusables/Products/Products';\r\nimport Product from '../../Reusables/Product/Product';\r\nimport pic from '../../../Images/Cart.PNG'\r\n\r\nconst ShoppingPage = () => {\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className={classes.ShoppingContainer}>\r\n                {\r\n                    ProductList.map((element) => {\r\n                        return (\r\n                            <Fragment>\r\n                                <div />\r\n                                <Product \r\n                                    name={element.productName} \r\n                                    price={element.productPrice} \r\n                                    keys={element.key} \r\n                                    source={element.productSource}\r\n                                />\r\n                            <div />\r\n                            </Fragment>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default ShoppingPage \r\n","import React, { Fragment} from 'react';\r\nimport classes from './CartModal.module.css';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../Store/ActionTypes/ActionTypes';\r\n\r\nconst CartModal = (props) => {\r\n\r\n    let total = \"$500.50\";\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n                <div className={classes.Backdrop} onClick={props.toggleCartModal} />\r\n\r\n\r\n            <div className={classes.CartModalContainer}>\r\n                <div className={classes.CartModalHolder}>\r\n                    <p className={classes.ItemName}>Product NAme</p>\r\n                    <p className={classes.ItemAmount}> 3 </p>\r\n                    <p className={classes.ItemCostTotal}> 500.50 </p>\r\n                    <p className={classes.TotalWords}>Total:</p><p className={classes.TotalCost}>{total}</p>\r\n                    \r\n                </div>\r\n                <button className={classes.CheckoutButton}>Checkout</button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isCartModalOpen: state.scrtmdlpnrdcr.isCartModalOpen\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    toggleCartModal: () => dispatch({type: actionTypes.TOGGLE_CART_MODAL})\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartModal)\r\n \r\n","import React, { Fragment } from 'react';\r\nimport classes from './HomePage.module.css';\r\nimport Header from '../Header/Header';\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className={classes.HomePageContainer}>\r\n                <p>Welcome to the world of boba</p>\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default HomePage \r\n","import React from 'react';\r\nimport ShoppingPage from './Components/ShoppingPage/ShoppingPage';\r\nimport CartModal from './Components/CartModal/CartModal';\r\nimport HomePage from './Components/HomePage/HomePage';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from './Store/ActionTypes/ActionTypes';\r\nimport { HashRouter, Route} from 'react-router-dom';\r\n\r\n// import { Route } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst ShoppingCartProject = (props) => {\r\n\r\n    // console.log('[ShoppingCArtProject.js]  is cart modal ope?:   ' + props.isCartModalOpen)\r\n    let shoppingPage = <ShoppingPage />\r\n    let cartModal = props.isCartModalOpen ? <CartModal backdropClicked={props.toggleCartModal} /> : null\r\n    let homePage = <HomePage />\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                {cartModal}\r\n            </div>\r\n            <Route path='/Browse' exact render={ () => <div>{shoppingPage}</div>} />\r\n            <Route path='/' exact render={ () => <div>{homePage}</div>} />\r\n        </HashRouter>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isCartModalOpen: state.scrtmdlpnrdcr.isCartModalOpen\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    toggleCartModal: () => dispatch({type: actionTypes.TOGGLE_CART_MODAL})\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartProject)","import React from 'react';\nimport './App.css';\nimport ShoppingCartProject from './ShoppingCartProject/ShoppingCartProject';\n\nfunction App() {\n  return (\n    <ShoppingCartProject />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../../Store/ActionTypes/ActionTypes';\r\n\r\nconst initialState = {\r\n    isCartModalOpen: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    if(action.type === actionTypes.TOGGLE_CART_MODAL){   \r\n        \r\n        return {\r\n            ...state,\r\n            isCartModalOpen: !state.isCartModalOpen\r\n        }\r\n    } \r\n\r\n\r\n    return state\r\n    \r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport isCartOpenReducer from './ShoppingCartProject/Store/Reducers/isCartModalOpenReducer';\n\nconst rootReducer = combineReducers({\n  scrtmdlpnrdcr : isCartOpenReducer\n})\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartModalContainer\":\"CartModal_CartModalContainer__29S-n\",\"fadeIn\":\"CartModal_fadeIn__28Eg0\",\"CartModalHolder\":\"CartModal_CartModalHolder__3trQV\",\"Backdrop\":\"CartModal_Backdrop__Vxg2_\",\"CheckoutButton\":\"CartModal_CheckoutButton__15_3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductContainer\":\"Product_ProductContainer__uKitn\",\"ProductImageHolder\":\"Product_ProductImageHolder__3mIza\",\"ProductImage\":\"Product_ProductImage__3C9kn\",\"ProductName\":\"Product_ProductName__dhVQ0\",\"ProductPrice\":\"Product_ProductPrice__rfsCk\",\"ProductQandA\":\"Product_ProductQandA__3mGLo\",\"QuantityInput\":\"Product_QuantityInput__3Blvl\",\"AddButton\":\"Product_AddButton__Sf__y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"Header_HeaderContainer__1G-5Q\",\"HomeButton\":\"Header_HomeButton__3CtaN\",\"HomeImage\":\"Header_HomeImage__5Fg2k\",\"BrowseButton\":\"Header_BrowseButton__1vK20\",\"CartButton\":\"Header_CartButton__Ur9qw\",\"CartImage\":\"Header_CartImage__3COoR\",\"CartNumber\":\"Header_CartNumber__2-wl8\"};"],"sourceRoot":""}